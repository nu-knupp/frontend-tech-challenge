services:
  # JSON Server - Mock API
  json-server:
    build:
      context: .
      target: json-server
    ports:
      - "3001:3001"
    volumes:
      - ./db:/app/db
    networks:
      - banking-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/transactions"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Banking Microfrontend
  banking:
    build:
      context: .
      target: banking-production
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - API_URL=http://json-server:3001
      - JSON_SERVER_URL=http://json-server:3001/transactions
    depends_on:
      json-server:
        condition: service_healthy
    networks:
      - banking-network
    healthcheck:
      test: ["CMD", "pgrep", "-f", "next"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Dashboard Microfrontend
  dashboard:
    build:
      context: .
      target: dashboard-production
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - API_URL=http://json-server:3001
      - JSON_SERVER_URL=http://json-server:3001/transactions
    depends_on:
      json-server:
        condition: service_healthy
    networks:
      - banking-network
    healthcheck:
      test: ["CMD", "pgrep", "-f", "next"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      banking:
        condition: service_healthy
      dashboard:
        condition: service_healthy
    networks:
      - banking-network
    restart: unless-stopped

networks:
  banking-network:
    driver: bridge

volumes:
  db_data:
    driver: local
